# Triple Pendulum Dynamics Simulation

## 1. Introduction to the Dynamical System (22 points)

### 1.1 Dynamical System Description
The system under study is a **triple pendulum**, a complex, non-linear system consisting of three pendulums attached end to end. This system is of great interest in engineering due to its chaotic behavior and sensitivity to initial conditions, making it ideal for studying dynamic systems, energy conservation, and the transition to chaos.

### 1.2 Importance and Relevance
Understanding the dynamics of a triple pendulum has numerous applications, especially in fields such as robotics (for balancing and control), aerospace (for modeling unstable systems), and mechanical engineering (for vibration analysis). The chaotic nature of the triple pendulum makes it particularly interesting, as small variations in initial conditions can lead to dramatically different behaviors, making it a useful benchmark for testing numerical methods.

### 1.3 Problem Setup
The system consists of three point masses \( m_1 \), \( m_2 \), and \( m_3 \), each attached to a rigid rod of lengths \( l_1 \), \( l_2 \), and \( l_3 \), with gravity acting on them. The system's state is defined by the angles \( \theta_1, \theta_2, \theta_3 \) and angular velocities \( \omega_1, \omega_2, \omega_3 \) of the pendulums. The governing equations of motion are derived from Lagrange's equations, resulting in a set of coupled non-linear second-order differential equations.

The parameters used for the simulation are:
- Gravity \( g = 9.81 \, \text{m/s}^2 \)
- Rod lengths \( l_1 = l_2 = l_3 = 1.0 \, \text{m} \)
- Masses \( m_1 = m_2 = m_3 = 1.0 \, \text{kg} \)

## 2. Numerical Method Selection (22 points)

### 2.1 Method Justification
The chosen numerical methods for solving the system are the **Adams-Bashforth 2 (AB2)** and **Runge-Kutta 4th order (RK4)** methods. These methods are appropriate for solving stiff, non-linear systems like the triple pendulum because of their balance between accuracy and computational cost.

- **AB2** is a multi-step method that offers good accuracy for moderate stiffness, and it's particularly effective for simulations over longer timescales.
- **RK4** is an explicit, single-step method that provides high accuracy for moderate-sized time steps and is commonly used in dynamical system simulations.

Both methods are suitable for solving the equations of motion due to their ability to handle the non-linearity and complexity of the triple pendulum's dynamics.

### 2.2 Mathematical Derivation and Properties
The AB2 method approximates the solution by using a weighted average of previous steps. The method is derived from the Adams-Bashforth predictor-corrector technique, which improves upon earlier methods by using multiple past time steps. The stability and error properties are well-understood for non-stiff equations, making it suitable for our system.

For the RK4 method, the algorithm uses a combination of intermediate steps (slopes) to calculate a more accurate solution for each time step. The error is of order \( O(\Delta t^4) \), which makes it highly accurate for smaller time steps.

### 2.3 Algorithmic Summary
- **AB2** updates the state by combining a predictor and a corrector step, using previous steps in the algorithm.
- **RK4** calculates intermediate slopes and combines them to give a highly accurate estimate of the state at each time step.

## 3. Method Implementation and Validation (22 points)

### 3.1 Error Convergence Study
To validate the methods, we performed a convergence study by comparing simulations at different time steps against a reference solution with a very small time step \( \Delta t = 0.0005 \). The error was calculated using the \( L_2 \)-norm of the difference between the simulation results and the reference solution. A log-log plot of error vs. time step shows the expected convergence rate for each method.

### 3.2 Parameter Sensitivity
We also performed simulations for different values of \( \Delta t \) to evaluate the sensitivity of the methods to time step size. The results indicate that smaller time steps lead to more accurate solutions, but computational cost increases. The optimal time step size was found to balance accuracy and computational efficiency.

## 4. Results and Discussion (22 points)

### 4.1 Energy Conservation
The triple pendulum's total energy (kinetic + potential) was monitored over time to verify energy conservation. The results show minimal energy loss, confirming that the numerical method accurately models the dynamics of the system. The normalized energy error was consistently below 1% throughout the simulation.

### 4.2 Lyapunov Exponent
The Lyapunov exponent was calculated to assess the chaotic behavior of the system. The positive exponent indicates that the system exhibits sensitive dependence on initial conditions, a hallmark of chaotic systems. The slope of the separation between nearby trajectories was found to be \( \lambda \approx 0.02 \), indicating chaotic behavior.

### 4.3 Cross-Correlation Analysis
The cross-correlation between the angular positions \( \theta_1, \theta_2, \theta_3 \) was computed to study the coupling between the pendulums. The results show that there is significant coupling between all three pendulums, with correlations indicating that the motions of the pendulums are strongly interdependent.

### 4.4 Visualization
Phase space plots and time series of the angles and angular velocities clearly show the non-linear, chaotic behavior of the triple pendulum. The chaotic oscillations and their sensitivity to initial conditions are evident in the results.

## 5. Conclusion
The numerical methods (AB2 and RK4) successfully modeled the dynamics of the triple pendulum. The system exhibited chaotic behavior, as expected, and the results were consistent with theoretical predictions for energy conservation and Lyapunov exponent. This study demonstrates the power of numerical methods in analyzing complex, non-linear dynamical systems.

Future work could involve extending the model to include damping forces or external driving forces, as well as improving the simulation's efficiency for larger-scale systems.


